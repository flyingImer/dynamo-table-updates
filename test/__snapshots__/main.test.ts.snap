// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "GatewayRestApiEndpoint231C1D06": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "GatewayRestApi1CBA9451",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "GatewayRestApiDeploymentStageprod86E8EB27",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParametersb53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163fArtifactHash84BFBDC4": Object {
      "Description": "Artifact hash for asset \\"b53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163f\\"",
      "Type": "String",
    },
    "AssetParametersb53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163fS3Bucket4E2C5751": Object {
      "Description": "S3 bucket for asset \\"b53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163f\\"",
      "Type": "String",
    },
    "AssetParametersb53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163fS3VersionKeyA90E0CEA": Object {
      "Description": "S3 key for asset version \\"b53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163f\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "DynamoStreamSqsDlqQueueBD971080": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "DynamoStreamSqsDlqQueuePolicyF3D1D7E1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DynamoStreamSqsDlqQueueBD971080",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DynamoStreamSqsDlqQueueBD971080",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "DynamoStreamSqsDlqQueueBD971080",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "GatewayApiAccessLogGroup3CFE23D4": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GatewayLambdaRestApiAccount205244E5": Object {
      "DependsOn": Array [
        "GatewayRestApi1CBA9451",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "GatewayLambdaRestApiCloudWatchRole18D8643C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "GatewayLambdaRestApiCloudWatchRole18D8643C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GatewayRestApi1CBA9451": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "GatewayRestApiDeployment0060DBE263bc791de063415d664d6caabfd9af5f": Object {
      "DependsOn": Array [
        "GatewayRestApiridDELETEC030980B",
        "GatewayRestApiridGET95A5885F",
        "GatewayRestApiridPUT002A7541",
        "GatewayRestApiridEB78EB12",
        "GatewayRestApiPOSTCEFA97D6",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "GatewayRestApi1CBA9451",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "GatewayRestApiDeploymentStageprod86E8EB27": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "GatewayApiAccessLogGroup3CFE23D4",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "GatewayRestApiDeployment0060DBE263bc791de063415d664d6caabfd9af5f",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "GatewayRestApi1CBA9451",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "GatewayRestApiPOSTCEFA97D6": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "GatewayapigatewayroleFABC3E58",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
          },
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{
  \\"TableName\\": \\"",
                  Object {
                    "Ref": "TableCD117FA1",
                  },
                  "\\",
  \\"Item\\": {
    \\"rid\\": {
      \\"S\\": \\"$input.path('$.rid')\\"
    },
    \\"fid\\": {
      \\"S\\": \\"$input.path('$.fid')\\"
    },
    \\"EventCount\\": {
      \\"N\\": \\"$input.path('$.EventCount')\\"
    },
    \\"Message\\": {
      \\"S\\": \\"$input.path('$.Message')\\"
    }
  }
}",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":dynamodb:action/PutItem",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "GatewayRestApi1CBA9451",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "GatewayRestApi1CBA9451",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "GatewayRestApiUsagePlan5E905B1D": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "GatewayRestApi1CBA9451",
            },
            "Stage": Object {
              "Ref": "GatewayRestApiDeploymentStageprod86E8EB27",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "GatewayRestApiridDELETEC030980B": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "GatewayapigatewayroleFABC3E58",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
          },
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{
  \\"TableName\\": \\"",
                  Object {
                    "Ref": "TableCD117FA1",
                  },
                  "\\",
  \\"Key\\": {
    \\"rid\\": {
      \\"S\\": \\"$input.path('$.rid')\\"
    },
    \\"fid\\": {
      \\"S\\": \\"$input.path('$.fid')\\"
    }  },
  \\"ConditionExpression\\": \\"attribute_not_exists(Replies)\\",
  \\"ReturnValues\\": \\"ALL_OLD\\"
}",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":dynamodb:action/DeleteItem",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Ref": "GatewayRestApiridEB78EB12",
        },
        "RestApiId": Object {
          "Ref": "GatewayRestApi1CBA9451",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "GatewayRestApiridEB78EB12": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "GatewayRestApi1CBA9451",
            "RootResourceId",
          ],
        },
        "PathPart": "{rid}",
        "RestApiId": Object {
          "Ref": "GatewayRestApi1CBA9451",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "GatewayRestApiridGET95A5885F": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "GatewayapigatewayroleFABC3E58",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
          },
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{
\\"TableName\\": \\"",
                  Object {
                    "Ref": "TableCD117FA1",
                  },
                  "\\",
 \\"KeyConditionExpression\\": \\"rid = :v1\\",
    \\"ExpressionAttributeValues\\": {
        \\":v1\\": {
            \\"S\\": \\"$input.params('rid')\\"
        }
    }
}",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":dynamodb:action/Query",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Ref": "GatewayRestApiridEB78EB12",
        },
        "RestApiId": Object {
          "Ref": "GatewayRestApi1CBA9451",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "GatewayRestApiridPUT002A7541": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "GatewayapigatewayroleFABC3E58",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
          },
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{
  \\"TableName\\": \\"",
                  Object {
                    "Ref": "TableCD117FA1",
                  },
                  "\\",
  \\"Key\\": {
    \\"rid\\": {
      \\"S\\": \\"$input.path('$.rid')\\"
    },
    \\"fid\\": {
      \\"S\\": \\"$input.path('$.fid')\\"
    }
  },
  \\"ExpressionAttributeValues\\": {
    \\":event_count\\": {
      \\"N\\": \\"$input.path('$.EventCount')\\"
    },
    \\":message\\": {
      \\"S\\": \\"$input.path('$.Message')\\"
    }
  },
  \\"UpdateExpression\\": \\"ADD EventCount :event_count SET Message = :message\\",
  \\"ReturnValues\\": \\"ALL_NEW\\"
}",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":dynamodb:action/UpdateItem",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Ref": "GatewayRestApiridEB78EB12",
        },
        "RestApiId": Object {
          "Ref": "GatewayRestApi1CBA9451",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "GatewayapigatewayroleDefaultPolicy2CE717A7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TableCD117FA1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "dynamodb:Query",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TableCD117FA1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TableCD117FA1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "dynamodb:DeleteItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TableCD117FA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GatewayapigatewayroleDefaultPolicy2CE717A7",
        "Roles": Array [
          Object {
            "Ref": "GatewayapigatewayroleFABC3E58",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GatewayapigatewayroleFABC3E58": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ImmediateConsumerdeadLetterQueueB84237FC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "ImmediateConsumerdeadLetterQueuePolicy37E81AAE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ImmediateConsumerdeadLetterQueueB84237FC",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ImmediateConsumerdeadLetterQueueB84237FC",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "ImmediateConsumerdeadLetterQueueB84237FC",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "ImmediateConsumerqueueA383C607": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "ImmediateConsumerdeadLetterQueueB84237FC",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "ImmediateConsumerqueuePolicy42CCCCD7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ImmediateConsumerqueueA383C607",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ImmediateConsumerqueueA383C607",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
            Object {
              "Action": "sqs:SendMessage",
              "Condition": Object {
                "ArnEquals": Object {
                  "aws:SourceArn": Object {
                    "Ref": "ImmediateUpdatesTopic3DF06BB2",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "sns.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ImmediateConsumerqueueA383C607",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "ImmediateConsumerqueueA383C607",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "ImmediateConsumerqueuetestImmediateUpdatesTopic9CB75232E2B3E3C2": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "ImmediateConsumerqueueA383C607",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "TopicArn": Object {
          "Ref": "ImmediateUpdatesTopic3DF06BB2",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ImmediateUpdatesTopic3DF06BB2": Object {
      "Type": "AWS::SNS::Topic",
    },
    "ImmediateUpdatesTopicPolicy7DCC45B1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "SNS:Publish",
                "SNS:RemovePermission",
                "SNS:SetTopicAttributes",
                "SNS:DeleteTopic",
                "SNS:ListSubscriptionsByTopic",
                "SNS:GetTopicAttributes",
                "SNS:AddPermission",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "AWS:SourceOwner": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Ref": "ImmediateUpdatesTopic3DF06BB2",
              },
              "Sid": "TopicOwnerOnlyAccess",
            },
            Object {
              "Action": Array [
                "SNS:Publish",
                "SNS:RemovePermission",
                "SNS:SetTopicAttributes",
                "SNS:DeleteTopic",
                "SNS:ListSubscriptionsByTopic",
                "SNS:GetTopicAttributes",
                "SNS:Receive",
                "SNS:AddPermission",
                "SNS:Subscribe",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Ref": "ImmediateUpdatesTopic3DF06BB2",
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "ImmediateUpdatesTopic3DF06BB2",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PublisherDynamoDBEventSourcetestTable1B9571572C507467": Object {
      "Properties": Object {
        "BatchSize": 100,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": Object {
          "OnFailure": Object {
            "Destination": Object {
              "Fn::GetAtt": Array [
                "DynamoStreamSqsDlqQueueBD971080",
                "Arn",
              ],
            },
          },
        },
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "TableCD117FA1",
            "StreamArn",
          ],
        },
        "FunctionName": Object {
          "Ref": "PublisherF0355618",
        },
        "MaximumRecordAgeInSeconds": 86400,
        "MaximumRetryAttempts": 500,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "PublisherF0355618": Object {
      "DependsOn": Array [
        "PublisherServiceRoleDefaultPolicy0E21E942",
        "PublisherServiceRoleF4D9160F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersb53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163fS3Bucket4E2C5751",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersb53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163fS3VersionKeyA90E0CEA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersb53cad44b3b3c69eee5d909acdead9169c3ff5122e55bf6577065e72fb8d163fS3VersionKeyA90E0CEA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SNS_TOPIC_ARN": Object {
              "Ref": "ImmediateUpdatesTopic3DF06BB2",
            },
            "SNS_TOPIC_NAME": Object {
              "Fn::GetAtt": Array [
                "ImmediateUpdatesTopic3DF06BB2",
                "TopicName",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "PublisherServiceRoleF4D9160F",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "PublisherLogRetentionE4EC9FBA": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "PublisherF0355618",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "PublisherServiceRoleDefaultPolicy0E21E942": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TableCD117FA1",
                  "StreamArn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DynamoStreamSqsDlqQueueBD971080",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "ImmediateUpdatesTopic3DF06BB2",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PublisherServiceRoleDefaultPolicy0E21E942",
        "Roles": Array [
          Object {
            "Ref": "PublisherServiceRoleF4D9160F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PublisherServiceRoleF4D9160F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TableCD117FA1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "rid",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "fid",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "rid",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "fid",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "SSEEnabled": true,
        },
        "StreamSpecification": Object {
          "StreamViewType": "KEYS_ONLY",
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
